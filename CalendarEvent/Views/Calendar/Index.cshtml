@model CalendarEvent.Models.EventSchedulerViewModel
@{
    ViewData["Title"] = "Event Scheduler";
    Layout = "~/Views/Shared/_LayoutCalendar.cshtml";
}
<div class="row mt-2">
    <div class="col">
        <form id="Calendar_frmSearch" class="" onsubmit="return false">
            <div class="form-group row">
                <div class="col">
                    <div class="d-inline-block text-secondary pr-2 pl-2">
                        <h3>Today : @Html.Raw(CalendarEvent.Utility.TimeUtility.ConvertDateToString(System.DateTime.Now))</h3>
                    </div>
                    <div class="d-inline-block align-self-center ml-2 mr-2">
                        <select id="calendar-month-list" class="form-control" name="param.MonthInt">
                            @for (int m = 1; m <= 12; m++)
                            {
                                @if (System.DateTime.Now.Month == m)
                                {
                                    <option value="@m" selected="selected">
                                        @Html.Raw(new System.DateTime(DateTime.Now.Year, m, 1).ToString("MMMM"))
                                    </option>
                                }
                                else
                                {
                                    <option value="@m">
                                        @Html.Raw(new System.DateTime(DateTime.Now.Year, m, 1).ToString("MMMM"))
                                    </option>
                                }

                            }
                        </select>
                    </div>
                    <div class="d-inline-block align-self-center">
                        <select id="calendar-year-list" class="form-control" name="param.YearInt">
                            @{
                                int StartYear = System.DateTime.Now.Year - 50;
                                int EndYear = System.DateTime.Now.Year + 50;
                            }
                            @for (int y = StartYear; y <= EndYear + 50; y++)
                            {
                                @if (System.DateTime.Now.Year == y)
                                {
                                    <option value="@y" selected="selected">
                                        @y.ToString()
                                    </option>
                                }
                                else
                                {
                                    <option value="@y">
                                        @y.ToString()
                                    </option>
                                }

                            }
                        </select>
                    </div>
                </div>
                <div class="col text-right">
                    <div class="d-inline-block">
                        <input type="text" id="calendar-txt-search" name="param.TextSearch" placeholder="Search..." class="form-control" />
                    </div>
                    <div class="d-inline-block">
                        <button type="button" id="calendar-btn-search" class="btn btn-outline-secondary">
                            <i class="fas fa-search fa-x2"></i>
                        </button>
                    </div>
                    <div class="d-inline-block ml-3">
                        <i class="fas fa-user-astronaut fa-1x"></i>
                        Taweechokp
                        @Html.Hidden("param.Userid", "Taweechokp")
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="row mt-2">
    <div id="calendar-grid" class="col table-responsive"></div>
</div>

<!-- Modal -->
<div class="modal fade" id="EntryCalendarModal" tabindex="-1" role="dialog" aria-labelledby="EntryCalendarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EntryCalendarModalLabel">Event Scheduler</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col">
                        <input type="text" class="form-control txt-title" maxlength="50" placeholder="Add title." />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col">
                        <textarea class="form-control txt-desc" id="" rows="3" placeholder="Add Description."></textarea>
                    </div>
                </div>
                <div class="form-inline">
                    <div class="col-1">
                        <i class="far fa-clock fa-2x"></i>
                    </div>
                    <div class="col">
                        <select class="form-control" id="calendar-time-startat">
                            @{ 
                                int running_number = 0;

                                for (int h = 0; h <= 23; h++)
                                {
                                    for (int m = 0; m <= 45; m += 15)
                                    {
                                        <option value="@h:@m" value1="@running_number">@h.ToString("D2"):@m.ToString("D2")</option>
                                        running_number++;
                                    }
                                }
                             }
                        </select> 
                        - 
                        <select class="form-control" id="calendar-time-endat">
                            @{ 
                                running_number = 0;
                                for (int h = 0; h <= 23; h++)
                                {
                                    for (int m = 0; m <= 45; m += 15)
                                    {
                                    <option value="@h:@m" value1="@running_number">@h.ToString("D2"):@m.ToString("D2")</option>
                                        running_number++;
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-note-delete" data-dismiss="modal" class="btn btn-outline-danger">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button id="btn-note-save" type="button" data-dismiss="modal" class="btn btn-outline-primary">
                    <i class="fas fa-save"></i> Save
                </button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var Calendar_Var = {
            actionType: "",
            eventID: 0,
            eventDate: "",
            page:"month"
        };
        var Calendar_Process = {
            cleardata: function () {
                Calendar_Var.actionType = "";
                Calendar_Var.eventID = 0;
                Calendar_Var.eventDate = "";

                $('.txt-title').val("");
                $('.txt-desc').val("");
                return true;
            },
            loadmonth: function () {
                var data_send = $('#Calendar_frmSearch').serialize();
                var ts = new Date().getTime();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ShowMonthList","Calendar")?ts=" + ts,
                    data: data_send,
                    dataType: "html",
                    success: function (response) {
                        $('#calendar-grid').empty().html(response).promise().done(function () {
                            //To do.

                            Calendar_Process.assignEventGrid(response);
                        });

                    },
                });
            },
            loadsearchlist: function () {
                var data_send = $('#Calendar_frmSearch').serialize();
                var ts = new Date().getTime();
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SearchList","Calendar")?ts=" + ts,
                    data: data_send,
                    dataType: "html",
                    success: function (response) {
                        $('#calendar-grid').empty().html(response).promise().done(function () {
                            //To do.

                            Calendar_Process.assignEventGrid(response);
                        });

                    },
                });
            },
            save: function () {
                var title = $('input.txt-title').val();
                var desc = $('.txt-desc').val();
                var start_at = $('#calendar-time-startat option:selected').val();
                var end_at = $('#calendar-time-endat option:selected').val();
                var data_send = {
                    "actionType": Calendar_Var.actionType,
                    "data.Eventid": Calendar_Var.eventID,
                    "data.Userid": "Taweechokp",
                    "data.StrEventdate": Calendar_Var.eventDate,
                    "data.Title": title,
                    "data.Description": desc,
                    "data.StartAt": start_at,
                    "data.EndAt": end_at
                };
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Save","Calendar")",
                    data: data_send,
                    success: function (response) {
                        //alert(JSON.stringify(response));
                        if (response.result == true) {
                            if (Calendar_Var.page == "search") {
                                Calendar_Process.loadsearchlist();
                            } else {
                                Calendar_Process.loadmonth();
                            }
                            Calendar_Process.cleardata();
                        } else {
                            console.log(JSON.stringify(response));
                        }
                    },
                });
            },
            delete: function () {
                var data_send = {
                    "data.Eventid": Calendar_Var.eventID,
                    "data.Userid": "Taweechokp",
                };
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Delete","Calendar")",
                    data: data_send,
                    success: function (response) {
                        //alert(JSON.stringify(response));
                        if (response.result == true) {
                            if (Calendar_Var.page == "search") {
                                Calendar_Process.loadsearchlist();
                            } else {
                                Calendar_Process.loadmonth();
                            }
                            Calendar_Process.cleardata();
                        } else {
                            console.log(JSON.stringify(response));
                        }
                    },
                });
            },
            assignEventGrid: function (response) {
                //Add note.
                $('.btn-add-note').click(function () {
                    //alert($(this).parents('td:first').attr('day'));
                    $("#EntryCalendarModal").modal({ backdrop: "static" });
                    $('#btn-note-delete').hide();
                    var result_clear =  Calendar_Process.cleardata();

                    //Add data for save
                    Calendar_Var.actionType = "insert";
                    Calendar_Var.eventDate = $(this).parents('td:first').attr('day');
                    $('#calendar-time-startat option[value="8:0"]').prop('selected', true);
                    $('#calendar-time-endat option[value="17:0"]').prop("selected", true);
                });
                //Edit note
                $('.btn-edit-note').click(function () {
                    $("#EntryCalendarModal").modal({ backdrop: "static" });
                    $('#btn-note-delete').show();

                    //Mapping data for save
                    Calendar_Var.actionType = "update";
                    Calendar_Var.eventID = $(this).attr('eventid');
                    Calendar_Var.eventDate = $(this).parents('td:first').attr('day');

                    var note_title = $(this).attr('notetitle');
                    var note_desc = $(this).attr('notedesc');
                    $('.txt-title').val(note_title);
                    $('.txt-desc').val(note_desc);

                    var start_at = $(this).attr('startat');
                    var end_at = $(this).attr('endat');
                    $('#calendar-time-startat option[value="' + start_at + '"]').prop("selected", true);
                    $('#calendar-time-endat option[value="' + end_at + '"]').prop("selected", true);
                });
                $('#calendar-btn-back-to-month').click(function () {
                    Calendar_Var.page = "month";
                    Calendar_Process.loadmonth();
                });
            },
        };
        var Calendar_Main = {
            load: function () {
                //Load page show month.
                Calendar_Process.loadmonth();

                this.assingEvnet();
            },
            assingEvnet: function () {
                $('#calendar-btn-search').click(function () {
                    Calendar_Var.page = "search";
                    Calendar_Process.loadsearchlist();
                });
                $('#calendar-txt-search').keypress(function (event) {
                    var keycode = (event.keyCode ? event.keyCode : event.which);
                    if (keycode == '13') {
                        Calendar_Var.page = "search";
                        Calendar_Process.loadsearchlist();
                    }
                });
                $('select#calendar-month-list').change(function () {
                    Calendar_Var.page = "month";
                    Calendar_Process.loadmonth();
                });
                $('select#calendar-year-list').change(function () {
                    Calendar_Var.page = "month";
                    Calendar_Process.loadmonth();
                });

                $('#EntryCalendarModal').on('hidden.bs.modal', function (e) {
                    Calendar_Process.cleardata();
                })

                $('#btn-note-save').click(function () {
                    Calendar_Process.save();
                });

                $('#btn-note-delete').click(function () {
                    Calendar_Process.delete();
                });

                $('#calendar-time-startat').change(function () {
                    var _min_at = $(this).find('option:selected').attr('value1');
                    var min_at = parseInt(_min_at);
                    //alert(min_at);
                    $('#calendar-time-endat > option').each(function () {
                        var _val1 = $(this).attr('value1');
                        var val1 = parseInt(_val1);
                        if (val1 < min_at) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                });

                $('#calendar-time-endat').change(function () {
                    var _max_at = $(this).find('option:selected').attr('value1');
                    var max_at = parseInt(_max_at);
                    //alert(max_at);
                    $('#calendar-time-startat > option').each(function () {
                        var _val1 = $(this).attr('value1');
                        var val1 = parseInt(_val1);
                        if (val1 > max_at) {
                            $(this).hide();
                        } else {
                            $(this).show();
                        }
                    });
                });
            }
        };

        Calendar_Main.load();
    </script>

}